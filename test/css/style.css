/* Jacket Tests
 * Take a look around and see what Jacket can do. */
/* Single jacket context.
   The matching jacket will be output.
   $jacket: ios;  */
.misty {
  /* Universal rules */
  font-size: 1rem;
  /* jacket(ios) rules */
  top: 30px;
  /* jacket(android-2x) rules */
}

/* Single jacket context, with selector.
   The matching jacket will be output wrapped in the selector.
   $jacket: anorak ".freezing";  */
.blizzard {
  /* Universal rules */
  font-size: 1rem;
  /* jacket(anorak) rules */
  /* jacket(windbreaker) rules */
}
.freezing .blizzard {
  max-width: 90%;
}

/* Multiple jacket contexts.
   If any jacket context matches a value the jacket will be output.
   $jacket: ie7, ie8;  */
.drizzle {
  /* Universal rules */
  font-size: 1rem;
  /* jacket(ie7) rules */
  width: 100%;
  /* jacket(ie8) rules */
  content: 'My rules will also be output.';
  background: none;
}

/* Multiple values in a single jacket.
   If a jacket context matches any of the values the jacket will be output.
   $jacket: main-site; */
.sunny {
  /* Universal rules */
  font-size: 1rem;
  /* jacket(main-site, sub-site) rules */
  margin: 1.618rem 0;
  /* jacket(sub-site) rules */
}

/* Multiple contexts and multiple values in a single jacket.
   If a jacket context matches any of the values the jacket will be output.
   $jacket: track, overcoat, mod ".triumph"; */
.cafe-race {
  /* Universal rules */
  font-size: 1rem;
  /* jacket(track, tie, suit) rules */
  position: absolute;
  /* jacket(suit, mod, overcoat) rules */
  top: 3em;
  /* jacket(leather) rules */
}
.triumph .cafe-race {
  top: 3em;
}

/* Conditional logic with nested jackets.
   You can create 'and' logic by nesting jackets.
   $jacket: build-1, build-1-a;  */
.soire {
  font-size: 1rem;
  /* jacket(build-1) { jacket(build-1-a) {} } rules */
  background-image: url(titans.gif);
  /* jacket(build-1) { jacket(build-1-b) {} } rules */
}

/* A simple media query fallback mixin built with jacket. */
/* Output media queries
   $jacket: standards, queries;
 */
@media (min-width: 30em) and (orientation: portrait) {
  .casual {
    color: green;
    height: 0.5vh;
  }
}

/* Output rules without queries (probably in their own stylesheet)
   $jacket: old-ie, noqueries;
 */
.casual {
  color: green;
  height: 0.5vh;
}

/* Output media queries and wrapped rules without queries in the same stylesheet
   $jacket: main-site, queries, noqueries ".lt-ie9";
*/
@media (min-width: 30em) and (orientation: portrait) {
  .casual {
    color: green;
    height: 0.5vh;
  }
}
.lt-ie9 .casual {
  color: green;
  height: 0.5vh;
}
