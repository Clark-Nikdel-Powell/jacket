///////////////////////////////////////////////////////////
// Jacket
// Dress appropriately
///////////////////////////////////////////////////////////

// Jacket helps you orgainze stylesheets for a multi context build process.
// Write and maintain a master stylesheet, then output custom tailored
// stylesheets for specific devices, browsers, and builds.

// A list of jackets to print in the stylesheet.
$jacket: null !default;

// A private variable used by jacket-context().
$jacket-context: null;


///////////////////////////////////////////////////////////
// Jacket mixin
// Takes a list of jacket values.
///////////////////////////////////////////////////////////
@mixin jacket($args) {

  $naked: false;
  $selectors: ();
  $filtered: ();
  $selector-string: '';

  // Set the global $jacket-context variable.
  $jacket-context: $args;

  // RWRW if $jacket length == 2, test if space sep or comma sep. if space, encapsulate
  // Guess I need to add some ruby till Sass 3.3

  // Test if the stylesheet's arguments and jacket match.
  @each $item in $jacket {
    @if index($args, nth($item, 1)) {


      // Gather wrapping selectors.
      @if length($item) == 1 {
        $naked: true;
      }
      @if length($item) == 2 {
        $selectors: append($selectors, nth($item, 2) + ' &');
      }
    }
  }

  // Filter out duplicate selectors. Use a holder variable until we get
  // reject() in vanilla Sass.
  @each $selector in $selectors {
    @if index($filtered, $selector) == false {
      $filtered: append($filtered, $selector);
    }
  }

  // Build the selector string and output.
  @each $selector in $filtered {
    @if $selector-string != '' {
      $selector-string: $selector-string + ", ";
    }
    $selector-string: $selector-string + $selector;
  }

  // If the weather is right, output that jacketed code!
  @if $naked {
    @content;
  }
  @if $selector-string != '' {
    #{$selector-string} {
      @content;
    }
  }
}


///////////////////////////////////////////////////////////
// Jacket Context function
// Takes a jacket value. Use when code inside a jacket
// needs to know if a specific jacket value is set.
///////////////////////////////////////////////////////////
@function jacket-context($arg) {
  @return if(index($jacket-context, $arg), true, false);
}

///// test test

$jacket: ie8 '.ltie9';

.rainy {
  // Universal rules
  font-size: 1rem;
  width: 90%;

  // Styles for iOS only
  @include jacket(ios) {
    background-color: #c0ffee;
    content: 'Double ristretto cortado, stat.';
  }
  // Styles for Android 2.x only
  @include jacket(andr-2x) {
    background-color: #baddad;
    content: 'I should get a new phone.';
  }
  // Styles for ie8 only
  @include jacket(ie8) {
    background-color: #000;
    content: 'Round three. FIGHT!';
  }
}


